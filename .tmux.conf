unbind-key C-b
set-option -g prefix C-t
bind-key C-t send-prefix

#ペインが複数になった時にはteratermなどでコピペが効かなくなるけど
#windows:Ctrl
#mac:option
#を押しながらだとできるようになる
#
#+----------------------------------------------------------------------------------------+
#  セッションオプション
#+----------------------------------------------------------------------------------------+
#新しいウィンドウのベース番号
set-option -g base-index 1
#全てのベルを無視
set-option -g bell-action none
#各セッションで保持するバッファ数
set-option -g buffer-limit 20

#256色端末を使用
#"screen-256color" にするとvimの<Home><End>が変わるのでxtermに変更
#vim のカラーがおかしくなるのでscreen-256colorを使う。ただしリモートサーバ上等でviがおかしかったらxtermに戻す
set-option -g default-terminal "screen-256color"
#set-option -g default-terminal "xterm"
#ウィンドウ履歴で保持される最大行数

set-option -g history-limit 5000
#Escapeキー入力時の待ち時間(0.5秒)をキャンセル
set-option -s escape-time 0
#起動シェルを指定
set-option -g default-shell /bin/zsh
#+----------------------------------------------------------------------------------------+
#  ステータスライン
#+----------------------------------------------------------------------------------------+
#set-option -g status-left '#[fg=black,bg=blue][S:#S]#[default]'
#set-option -g status-right '#[fg=black,bg=blue]#[fg=black,bg=green][%Y/%m/%d(%a)%H:%M]#[default]'
#
#set-option -g status-right-length 50
#set-option -g status-fg white
#set-option -g status-bg black
#set-window-option -g window-status-fg blue
#set-window-option -g window-status-bg black
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-bg blue
#
## ペインボーダーの色を設定する
#set -g pane-border-fg green
#set -g pane-border-bg black
## アクティブなペインを目立たせる
#set -g pane-active-border-fg white
#set -g pane-active-border-bg blue
#
##pane番号の表示を長くする
#set-option -g display-panes-time 10000

# ステータスバーを設定する
set-window-option -g allow-rename off
set-window-option -g window-status-current-format "#[fg=colour255,bg=colour241,bold] #I: #W #[default]"
## 左パネルを設定する
set -g status-left-length 50
set -g status-left \
"#{?client_prefix,#[reverse],}#[fg=green][#S:#I.#P]#[fg=yellow][#(whoami)@#h]  "
## 右パネルを設定する
set -g status-right-length 80
set -g status-right \
"#{?client_prefix,#[reverse],}"\
"#[fg=green]#(${HOME}/dotfiles/bin/git-echo-branch-tmux-current-pane)"\
"#[fg=yellow]#(${HOME}/dotfiles/bin/git-echo-username-and-email)"\
"#[fg=cyan][%Y-%m-%d(%a) %H:%M]"
#### COLOUR (Solarized dark)
#### cf: https://github.com/altercation/solarized/blob/master/tmux/tmuxcolors-dark.conf
# default statusbar colors
#set-option -g status-bg black #base02
#set-option -g status-fg yellow #yellow
#set-option -g status-attr default
## default window title colors
#set-window-option -g window-status-fg brightblue #base0
#set-window-option -g window-status-bg default
##set-window-option -g window-status-attr dim
## active window title colors
#set-window-option -g window-status-current-fg brightred #orange
#set-window-option -g window-status-current-bg default
##set-window-option -g window-status-current-attr bright
## pane border
#set-option -g pane-border-fg black #base02
#set-option -g pane-active-border-fg brightgreen #base01
## message text
#set-option -g message-bg black #base02
#set-option -g message-fg brightred #orange
## pane number display
#set-option -g display-panes-active-colour blue #blue
#set-option -g display-panes-colour brightred #orange
## clock
#set-window-option -g clock-mode-colour green #green

#+----------------------------------------------------------------------------------------+
#  ウィンドウオプション
#+----------------------------------------------------------------------------------------+
#ウィンドウを実行コマンド名で自動リネーム
set-window-option -g automatic-rename on
#スクロールモード、コピーモード、選択モードで vi のキーバインドを使う
set-window-option -g mode-keys vi
#ウィンドウで動作があるとステータスラインでハイライト
set-window-option -g monitor-activity on

# prefix + r で設定ファイルを再読み込み
unbind r
bind r source-file ~/.tmux.conf

# キーバインド
# 各種ペインの移動
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# 各種ペインのリサイズ
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M



### for mac ###
# reattach-to-user-namespace
set-option -g default-command 'reattach-to-user-namespace -l zsh'
bind y run-shell 'tmux save-buffer - |reattach-to-user-namespace pbcopy'

# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

